
def graph_to_adjacency_matrix(graph, qubits):
    adj_matrix = [[0 for _ in range(qubits)] for _ in range(qubits)]
    for edge in graph:
        adj_matrix[edge[0]][edge[1]] = 1
        adj_matrix[edge[1]][edge[0]] = 1
    return adj_matrix

# Floyd-Warshall algorithm
def get_all_shortest_paths(graph):
    n = len(graph)
    dist = [[0 for _ in range(n)] for _ in range(n)]
    next = [[0 for _ in range(n)] for _ in range(n)]
    for i in range(n):
        for j in range(n):
            if i == j:
                dist[i][j] = 0
                next[i][j] = i
            elif graph[i][j] == 1:
                dist[i][j] = 1
                next[i][j] = i
            else:
                dist[i][j] = n
                next[i][j] = -1
    for k in range(n):
        for i in range(n):
            for j in range(n):
                if dist[i][j] > dist[i][k] + dist[k][j]:
                    dist[i][j] = dist[i][k] + dist[k][j]
                    next[i][j] = next[k][j]
    return dist, next

def construct_path(next, i, j):
    if next[i][j] == -1:
        return []
    path = [j]
    while i != j:
        j = next[i][j]
        path.append(j)
    return list(reversed(path))


def ibm_reuschlikon_q16():
    qubits = 16
    graph = []
    graph.append([0, 1])
    graph.append([0, 15])
    graph.append([1, 2])
    graph.append([2, 15])
    graph.append([2, 3])
    graph.append([3, 14])
    graph.append([3, 4])
    graph.append([4, 13])
    graph.append([4, 5])
    graph.append([5, 12])
    graph.append([5, 6])
    graph.append([6, 11])
    graph.append([6, 7])
    graph.append([7, 8])
    graph.append([7, 10])
    graph.append([8, 9])
    graph.append([9, 10])
    graph.append([10, 11])
    graph.append([11, 12])
    graph.append([12, 13])
    graph.append([13, 14])
    graph.append([14, 15])

    return graph_to_adjacency_matrix(graph, qubits)

def ibm_tokyo_q20():
    qubits = 20
    graph = []
    graph.append([0, 1])
    graph.append([0, 5])
    graph.append([1, 2])
    graph.append([1, 6])
    graph.append([1, 7])
    graph.append([2, 6])
    graph.append([3, 8])
    graph.append([4, 8])
    graph.append([4, 9])
    graph.append([5, 6])
    graph.append([5, 10])
    graph.append([5, 11])
    graph.append([6, 7])
    graph.append([6, 10])
    graph.append([6, 11])
    graph.append([7, 8])
    graph.append([7, 12])
    graph.append([8, 9])
    graph.append([8, 12])
    graph.append([8, 13])
    graph.append([10, 11])
    graph.append([10, 15])
    graph.append([11, 12])
    graph.append([11, 16])
    graph.append([11, 17])
    graph.append([12, 13])
    graph.append([12, 16])
    graph.append([13, 14])
    graph.append([13, 18])
    graph.append([13, 19])
    graph.append([14, 19])
    graph.append([14, 18])
    graph.append([15, 16])
    graph.append([16, 17])
    graph.append([17, 18])

    return graph_to_adjacency_matrix(graph, qubits)

def ibm_paughkeepsie_q20():
    qubits = 20
    graph = []
    graph.append([0, 1])
    graph.append([0, 5])
    graph.append([1, 2])
    graph.append([2, 3])
    graph.append([3, 4])
    graph.append([4, 9])
    graph.append([5, 6])
    graph.append([5, 10])
    graph.append([6, 7])
    graph.append([7, 8])
    graph.append([7, 12])
    graph.append([8, 9])
    graph.append([9, 14])
    graph.append([10, 11])
    graph.append([10, 15])
    graph.append([11, 12])
    graph.append([12, 13])
    graph.append([13, 14])
    graph.append([14, 19])
    graph.append([15, 16])
    graph.append([16, 17])
    graph.append([17, 18])
    graph.append([18, 19])

    return graph_to_adjacency_matrix(graph, qubits)

def ibm_cambridge_q28():
    qubits = 28
    graph = []
    graph.append([0, 1])
    graph.append([0, 5])
    graph.append([1, 2])
    graph.append([2, 3])
    graph.append([3, 4])
    graph.append([4, 6])
    graph.append([5, 9])
    graph.append([6, 13])
    graph.append([7, 8])
    graph.append([7, 16])
    graph.append([8, 9])
    graph.append([9, 10])
    graph.append([10, 11])
    graph.append([11, 12])
    graph.append([11, 17])
    graph.append([12, 13])
    graph.append([13, 14])
    graph.append([14, 15])
    graph.append([15, 18])
    graph.append([16, 19])
    graph.append([17, 23])
    graph.append([18, 27])
    graph.append([19, 20])
    graph.append([20, 21])
    graph.append([21, 22])
    graph.append([22, 23])
    graph.append([23, 24])
    graph.append([24, 25])
    graph.append([25, 26])
    graph.append([26, 27])

    return graph_to_adjacency_matrix(graph, qubits)

def ibm_montreal_q27():
    qubits = 27
    graph = []
    graph.append([0, 5])
    graph.append([1, 9])
    graph.append([2, 3])
    graph.append([3, 4])
    graph.append([3, 12])
    graph.append([4, 5])
    graph.append([5, 6])
    graph.append([6, 7])
    graph.append([7, 8])
    graph.append([7, 13])
    graph.append([8, 9])
    graph.append([9, 10])
    graph.append([10, 11])
    graph.append([11, 14])
    graph.append([12, 15])
    graph.append([13, 19])
    graph.append([14, 23])
    graph.append([15, 16])
    graph.append([16, 17])
    graph.append([17, 18])
    graph.append([17, 25])
    graph.append([18, 19])
    graph.append([19, 20])
    graph.append([20, 21])
    graph.append([21, 22])
    graph.append([22, 23])
    graph.append([23, 24])
    graph.append([21, 26])

    return graph_to_adjacency_matrix(graph, qubits)

def ibm_almaden_q20():
    qubits = 20
    graph = []
    graph.append([0, 1])
    graph.append([1, 2])
    graph.append([1, 6])
    graph.append([2, 3])
    graph.append([3, 4])
    graph.append([3, 8])
    graph.append([5, 6])
    graph.append([5, 10])
    graph.append([6, 7])
    graph.append([7, 8])
    graph.append([7, 12])
    graph.append([8, 9])
    graph.append([9, 14])
    graph.append([10, 11])
    graph.append([11, 12])
    graph.append([11, 16])
    graph.append([12, 13])
    graph.append([13, 14])
    graph.append([13, 18])
    graph.append([15, 16])
    graph.append([16, 17])
    graph.append([17, 18])
    graph.append([18, 19])

    return graph_to_adjacency_matrix(graph, qubits)

def ibm_rochester_q53():
    qubits = 53
    graph = []
    graph.append([0, 1])
    graph.append([1, 2])
    graph.append([2, 3])
    graph.append([3, 4])
    graph.append([0, 5])
    graph.append([5, 9])
    graph.append([4, 6])
    graph.append([6, 13])
    graph.append([7, 8])
    graph.append([8, 9])
    graph.append([9, 10])
    graph.append([10, 11])
    graph.append([11, 12])
    graph.append([12, 13])
    graph.append([13, 14])
    graph.append([14, 15])
    graph.append([7, 16])
    graph.append([11, 17])
    graph.append([15, 18])
    graph.append([16, 19])
    graph.append([17, 23])
    graph.append([18, 27])
    graph.append([19, 20])
    graph.append([20, 21])
    graph.append([21, 22])
    graph.append([22, 23])
    graph.append([23, 24])
    graph.append([24, 25])
    graph.append([25, 26])
    graph.append([26, 27])
    graph.append([21, 28])
    graph.append([25, 29])
    graph.append([28, 32])
    graph.append([29, 36])
    graph.append([30, 31])
    graph.append([31, 32])
    graph.append([32, 33])
    graph.append([33, 34])
    graph.append([34, 35])
    graph.append([35, 36])
    graph.append([36, 37])
    graph.append([37, 38])
    graph.append([30, 39])
    graph.append([34, 40])
    graph.append([38, 41])
    graph.append([39, 42])
    graph.append([40, 46])
    graph.append([41, 50])
    graph.append([42, 43])
    graph.append([43, 44])
    graph.append([44, 45])
    graph.append([45, 46])
    graph.append([46, 47])
    graph.append([47, 48])
    graph.append([48, 49])
    graph.append([49, 50])
    graph.append([44, 51])
    graph.append([48, 52])

    return graph_to_adjacency_matrix(graph, qubits)

def ibm_manhattan_q65():
    qubits = 65
    graph = []
    graph.append([0, 1])
    graph.append([1, 2])
    graph.append([2, 3])
    graph.append([3, 4])
    graph.append([4, 5])
    graph.append([5, 6])
    graph.append([6, 7])
    graph.append([7, 8])
    graph.append([8, 9])
    graph.append([0, 10])
    graph.append([4, 11])
    graph.append([8, 12])
    graph.append([10, 13])
    graph.append([11, 17])
    graph.append([12, 21])
    graph.append([13, 14])
    graph.append([14, 15])
    graph.append([15, 16])
    graph.append([16, 17])
    graph.append([17, 18])
    graph.append([18, 19])
    graph.append([19, 20])
    graph.append([20, 21])
    graph.append([21, 22])
    graph.append([22, 23])
    graph.append([15, 24])
    graph.append([19, 25])
    graph.append([23, 26])
    graph.append([24, 29])
    graph.append([25, 33])
    graph.append([26, 37])
    graph.append([27, 28])
    graph.append([28, 29])
    graph.append([29, 30])
    graph.append([30, 31])
    graph.append([31, 32])
    graph.append([32, 33])
    graph.append([33, 34])
    graph.append([34, 35])
    graph.append([35, 36])
    graph.append([36, 37])
    graph.append([27, 38])
    graph.append([31, 39])
    graph.append([35, 40])
    graph.append([38, 41])
    graph.append([39, 45])
    graph.append([40, 49])
    graph.append([41, 42])
    graph.append([42, 43])
    graph.append([43, 44])
    graph.append([44, 45])
    graph.append([45, 46])
    graph.append([46, 47])
    graph.append([47, 48])
    graph.append([48, 49])
    graph.append([49, 50])
    graph.append([50, 51])
    graph.append([43, 52])
    graph.append([47, 53])
    graph.append([51, 54])
    graph.append([52, 56])
    graph.append([53, 60])
    graph.append([54, 64])
    graph.append([55, 56])
    graph.append([56, 57])
    graph.append([57, 58])
    graph.append([58, 59])
    graph.append([59, 60])
    graph.append([60, 61])
    graph.append([61, 62])
    graph.append([62, 63])
    graph.append([63, 64])

    return graph_to_adjacency_matrix(graph, qubits)

def ibm_heron_q133():
    qubits = 133
    graph = []
    graph.append([0, 1])
    graph.append([1, 2])
    graph.append([2, 3])
    graph.append([3, 4])
    graph.append([4, 5])
    graph.append([5, 6])
    graph.append([6, 7])
    graph.append([7, 8])
    graph.append([8, 9])
    graph.append([9, 10])
    graph.append([10, 11])
    graph.append([11, 12])
    graph.append([12, 13])
    graph.append([13, 14])
    graph.append([0, 15])
    graph.append([4, 16])
    graph.append([8, 17])
    graph.append([12, 18])
    graph.append([15, 19])
    graph.append([16, 23])
    graph.append([17, 27])
    graph.append([18, 31])
    graph.append([19, 20])
    graph.append([20, 21])
    graph.append([21, 22])
    graph.append([22, 23])
    graph.append([23, 24])
    graph.append([24, 25])
    graph.append([25, 26])
    graph.append([26, 27])
    graph.append([27, 28])
    graph.append([28, 29])
    graph.append([29, 30])
    graph.append([30, 31])
    graph.append([31, 32])
    graph.append([32, 33])
    graph.append([21, 34])
    graph.append([25, 35])
    graph.append([29, 36])
    graph.append([33, 37])
    graph.append([34, 40])
    graph.append([35, 44])
    graph.append([36, 48])
    graph.append([37, 52])
    graph.append([38, 39])
    graph.append([39, 40])
    graph.append([40, 41])
    graph.append([41, 42])
    graph.append([42, 43])
    graph.append([43, 44])
    graph.append([44, 45])
    graph.append([45, 46])
    graph.append([46, 47])
    graph.append([47, 48])
    graph.append([48, 49])
    graph.append([49, 50])
    graph.append([50, 51])
    graph.append([51, 52])
    graph.append([38, 53])
    graph.append([42, 54])
    graph.append([46, 55])
    graph.append([50, 56])
    graph.append([53, 57])
    graph.append([54, 61])
    graph.append([55, 65])
    graph.append([56, 69])
    graph.append([57, 58])
    graph.append([58, 59])
    graph.append([59, 60])
    graph.append([60, 61])
    graph.append([61, 62])
    graph.append([62, 63])
    graph.append([63, 64])
    graph.append([64, 65])
    graph.append([65, 66])
    graph.append([66, 67])
    graph.append([67, 68])
    graph.append([68, 69])
    graph.append([69, 70])
    graph.append([70, 71])
    graph.append([59, 72])
    graph.append([63, 73])
    graph.append([67, 74])
    graph.append([71, 75])
    graph.append([72, 78])
    graph.append([73, 82])
    graph.append([74, 86])
    graph.append([75, 90])
    graph.append([76, 77])
    graph.append([77, 78])
    graph.append([78, 79])
    graph.append([79, 80])
    graph.append([80, 81])
    graph.append([81, 82])
    graph.append([82, 83])
    graph.append([83, 84])
    graph.append([84, 85])
    graph.append([85, 86])
    graph.append([86, 87])
    graph.append([87, 88])
    graph.append([88, 89])
    graph.append([89, 90])
    graph.append([76, 91])
    graph.append([80, 92])
    graph.append([84, 93])
    graph.append([88, 94])
    graph.append([91, 95])
    graph.append([92, 99])
    graph.append([93, 103])
    graph.append([94, 107])
    graph.append([95, 96])
    graph.append([96, 97])
    graph.append([97, 98])
    graph.append([98, 99])
    graph.append([99, 100])
    graph.append([100, 101])
    graph.append([101, 102])
    graph.append([102, 103])
    graph.append([103, 104])
    graph.append([104, 105])
    graph.append([105, 106])
    graph.append([106, 107])
    graph.append([107, 108])
    graph.append([108, 109])
    graph.append([97, 110])
    graph.append([101, 111])
    graph.append([105, 112])
    graph.append([109, 113])
    graph.append([110, 116])
    graph.append([111, 120])
    graph.append([112, 124])
    graph.append([113, 128])
    graph.append([114, 115])
    graph.append([115, 116])
    graph.append([116, 117])
    graph.append([117, 118])
    graph.append([118, 119])
    graph.append([119, 120])
    graph.append([120, 121])
    graph.append([121, 122])
    graph.append([122, 123])
    graph.append([123, 124])
    graph.append([124, 125])
    graph.append([125, 126])
    graph.append([126, 127])
    graph.append([127, 128])
    graph.append([114, 129])
    graph.append([118, 130])
    graph.append([122, 131])
    graph.append([126, 132])

    return graph_to_adjacency_matrix(graph, qubits)

def ibm_eagle_q127():
    qubits = 127
    graph = []
    graph.append([0, 1])
    graph.append([1, 2])
    graph.append([2, 3])
    graph.append([3, 4])
    graph.append([4, 5])
    graph.append([5, 6])
    graph.append([6, 7])
    graph.append([7, 8])
    graph.append([8, 9])
    graph.append([9, 10])
    graph.append([10, 11])
    graph.append([11, 12])
    graph.append([12, 13])
    graph.append([0, 14])
    graph.append([4, 15])
    graph.append([8, 16])
    graph.append([12, 17])
    graph.append([14, 18])
    graph.append([15, 22])
    graph.append([16, 26])
    graph.append([17, 30])
    graph.append([18, 19])
    graph.append([19, 20])
    graph.append([20, 21])
    graph.append([21, 22])
    graph.append([22, 23])
    graph.append([23, 24])
    graph.append([24, 25])
    graph.append([25, 26])
    graph.append([26, 27])
    graph.append([27, 28])
    graph.append([28, 29])
    graph.append([29, 30])
    graph.append([30, 31])
    graph.append([31, 32])
    graph.append([20, 33])
    graph.append([24, 34])
    graph.append([28, 35])
    graph.append([32, 36])
    graph.append([33, 39])
    graph.append([34, 43])
    graph.append([35, 47])
    graph.append([36, 51])
    graph.append([37, 38])
    graph.append([38, 39])
    graph.append([39, 40])
    graph.append([40, 41])
    graph.append([41, 42])
    graph.append([42, 43])
    graph.append([43, 44])
    graph.append([44, 45])
    graph.append([45, 46])
    graph.append([46, 47])
    graph.append([47, 48])
    graph.append([48, 49])
    graph.append([49, 50])
    graph.append([50, 51])
    graph.append([37, 52])
    graph.append([41, 53])
    graph.append([45, 54])
    graph.append([49, 55])
    graph.append([52, 56])
    graph.append([53, 60])
    graph.append([54, 64])
    graph.append([55, 68])
    graph.append([56, 57])
    graph.append([57, 58])
    graph.append([58, 59])
    graph.append([59, 60])
    graph.append([60, 61])
    graph.append([61, 62])
    graph.append([62, 63])
    graph.append([63, 64])
    graph.append([64, 65])
    graph.append([65, 66])
    graph.append([66, 67])
    graph.append([67, 68])
    graph.append([68, 69])
    graph.append([69, 70])
    graph.append([58, 71])
    graph.append([62, 72])
    graph.append([66, 73])
    graph.append([70, 74])
    graph.append([71, 77])
    graph.append([72, 81])
    graph.append([73, 85])
    graph.append([74, 89])
    graph.append([75, 76])
    graph.append([76, 77])
    graph.append([77, 78])
    graph.append([78, 79])
    graph.append([79, 80])
    graph.append([80, 81])
    graph.append([81, 82])
    graph.append([82, 83])
    graph.append([83, 84])
    graph.append([84, 85])
    graph.append([85, 86])
    graph.append([86, 87])
    graph.append([87, 88])
    graph.append([88, 89])
    graph.append([75, 90])
    graph.append([79, 91])
    graph.append([83, 92])
    graph.append([87, 93])
    graph.append([90, 94])
    graph.append([91, 98])
    graph.append([92, 102])
    graph.append([93, 106])
    graph.append([94, 95])
    graph.append([95, 96])
    graph.append([96, 97])
    graph.append([97, 98])
    graph.append([98, 99])
    graph.append([99, 100])
    graph.append([100, 101])
    graph.append([101, 102])
    graph.append([102, 103])
    graph.append([103, 104])
    graph.append([104, 105])
    graph.append([105, 106])
    graph.append([106, 107])
    graph.append([107, 108])
    graph.append([96, 109])
    graph.append([100, 110])
    graph.append([104, 111])
    graph.append([108, 112])
    graph.append([109, 114])
    graph.append([110, 118])
    graph.append([111, 122])
    graph.append([112, 126])
    graph.append([113, 114])
    graph.append([114, 115])
    graph.append([115, 116])
    graph.append([116, 117])
    graph.append([117, 118])
    graph.append([118, 119])
    graph.append([119, 120])
    graph.append([120, 121])
    graph.append([121, 122])
    graph.append([122, 123])
    graph.append([123, 124])
    graph.append([124, 125])
    graph.append([125, 126])

    return graph_to_adjacency_matrix(graph, qubits)

def ibm_falcon_q27():
    qubits = 27
    graph = []
    graph.append([0, 1])
    graph.append([1, 2])
    graph.append([1, 4])
    graph.append([2, 3])
    graph.append([3, 5])
    graph.append([4, 7])
    graph.append([5, 8])
    graph.append([6, 7])
    graph.append([7, 10])
    graph.append([8, 11])
    graph.append([8, 9])
    graph.append([10, 12])
    graph.append([11, 14])
    graph.append([12, 15])
    graph.append([12, 13])
    graph.append([13, 14])
    graph.append([14, 16])
    graph.append([15, 18])
    graph.append([16, 19])
    graph.append([17, 18])
    graph.append([18, 21])
    graph.append([19, 22])
    graph.append([19, 20])
    graph.append([21, 23])
    graph.append([22, 25])
    graph.append([23, 24])
    graph.append([24, 25])
    graph.append([25, 26])

    return graph_to_adjacency_matrix(graph, qubits)

def rigetti_novera_q9():
    qubits = 9
    graph = []
    graph.append([0, 1])
    graph.append([1, 2])
    graph.append([0, 3])
    graph.append([1, 4])
    graph.append([2, 5])
    graph.append([3, 4])
    graph.append([4, 5])
    graph.append([3, 6])
    graph.append([4, 7])
    graph.append([5, 8])
    graph.append([6, 7])
    graph.append([7, 8])

    return graph_to_adjacency_matrix(graph, qubits)

def ionq_harmony_q9():
    qubits = 9
    graph = []
    for i in range(qubits):
        for j in range(qubits):
            if i != j:
                graph.append([i, j])
    
    return graph_to_adjacency_matrix(graph, qubits)

def get_topology_by_string(name):
    topology_functions = {
        'ibm_reuschlikon_q16': ibm_reuschlikon_q16,
        'ibm_tokyo_q20': ibm_tokyo_q20,
        'ibm_paughkeepsie_q20': ibm_paughkeepsie_q20,
        'ibm_cambridge_q28': ibm_cambridge_q28,
        'ibm_montreal_q27': ibm_montreal_q27,
        'ibm_almaden_q20': ibm_almaden_q20,
        'ibm_rochester_q53': ibm_rochester_q53,
        'ibm_manhattan_q65': ibm_manhattan_q65,
        'ibm_heron_q133': ibm_heron_q133,
        'ibm_eagle_q127': ibm_eagle_q127,
        'ibm_falcon_q27': ibm_falcon_q27,
        'rigetti_novera_q9': rigetti_novera_q9,
        'ionq_harmony_q9': ionq_harmony_q9
    }
    if name in topology_functions:
        return topology_functions[name]()
    else:
        raise ValueError("Topology not found")
